#!/usr/bin/ruby
require 'erb'

class HostClass
  attr_reader :name, :domain, :ip_offset, :vm_prefix, :subnet, :ip, :host_type

  def initialize(idx, vm_prefix, subnet, ip_offset, host_type)
    @name = "%s-%d" % [vm_prefix, idx]
    @domain = ".interubernet.local"
    @vm_prefix = vm_prefix
    @subnet = subnet
    @ip_offset = ip_offset
    @ip = subnet+"."+ip_offset
    @host_type = host_type
  end

  def display_details()
    puts "Name: #@name"
    puts "Domain: #@domain"
    puts "VM prefix: #@vm_prefix"
    puts "Network: #@subnet"
    puts "IP offset: #@ip_offset"
    puts "IP: #@ip"
    puts "Host type: #@host_type"
  end
end


# define host properties
def get_hosts()
  hosts = []
  (1..4).each do |i|
    if i == 1
      hosts.push(HostClass.new(i, "ubuntu", "10.20.30", "#{i+70}", "master"))
    elsif i < 4
     hosts.push(HostClass.new(i, "ubuntu", "10.20.30", "#{i+70}", "minion"))
    else
     hosts.push(HostClass.new(i, "ubuntu", "192.168.50", "#{i+70}", "minion"))
    end
  end
  hosts
end

# hosts = get_hosts
#
# hosts[1..-1].each do |x|
#   x.display_details()
#   #print x.ip + "\n"
#   print "\n"
# end


def get_ansible_inventory_template()
  %{# This is the default ansible 'hosts' file.
#
# It should live in /etc/ansible/hosts
#
#   - Comments begin with the '#' character
#   - Blank lines are ignored
#   - Groups of hosts are delimited by [header] elements
#   - You can enter hostnames or ip addresses
#   - A hostname/ip can be a member of multiple groups

[masters]
<% for @host in @all_hosts %><% if "master".eql? @host.host_type %><%=
@host.name %>
<% end %><% end %>
[minions]
<% for @host in @all_hosts %><% if "minion".eql? @host.host_type %><%=
@host.name %>
<% end %><% end %>
}
end

def get_dns_hosts_file_template()
  %{# This file is generated by the Vagrantfile and is overwritten when machine is provisioned

# The following lines are desirable for IPv4 capable hosts
127.0.0.1       localhost

# 127.0.1.1 is often used for the FQDN of the machine
127.0.0.1 <%= @current_host.name %><%= @current_host.domain %> vagrant.vm vagrant
<% for @host in @all_hosts %><%=
@host.ip %> <%= @host.name %><%= @host.domain %> <%= @host.name %>
<% end %>

# The following lines are desirable for IPv6 capable hosts
::1     localhost ip6-localhost ip6-loopback
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters

}
end

class HostFileRenderer
  include ERB::Util
  attr_accessor :items, :template

  def initialize(current_host, all_hosts, template)
    @current_host = current_host
    @all_hosts = all_hosts
    @template = template
  end

  def render()
    ERB.new(@template).result(binding)
  end

  def save(file)
    File.open(file, "w+") do |f|
      f.write(render)
    end
  end

end

# generate node dns hosts files
get_hosts[0..-1].each do |host|
  list = HostFileRenderer.new(host, get_hosts, get_dns_hosts_file_template)
  list.save(File.join(host.name+'.hosts'))
end

# generate ansible inventory
ansible_inventory = HostFileRenderer.new(get_hosts[0], get_hosts, get_ansible_inventory_template)
ansible_inventory.save(File.new('ansible_inventory',"w+"))



